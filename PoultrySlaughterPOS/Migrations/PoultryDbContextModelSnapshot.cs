// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PoultrySlaughterPOS.Data;

#nullable disable

namespace PoultrySlaughterPOS.Migrations
{
    [DbContext(typeof(PoultryDbContext))]
    partial class PoultryDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PoultrySlaughterPOS.Models.AuditLog", b =>
                {
                    b.Property<int>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AuditId"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NewValues")
                        .HasColumnType("ntext");

                    b.Property<string>("OldValues")
                        .HasColumnType("ntext");

                    b.Property<string>("Operation")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TableName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("AuditId");

                    b.HasIndex("TableName", "CreatedDate");

                    b.ToTable("AUDIT_LOGS");
                });

            modelBuilder.Entity("PoultrySlaughterPOS.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("TotalDebt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(12, 2)
                        .HasColumnType("decimal(12,2)")
                        .HasDefaultValue(0m);

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CustomerId");

                    b.HasIndex("CustomerName");

                    b.ToTable("CUSTOMERS");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            Address = "بغداد - الكرادة",
                            CreatedDate = new DateTime(2025, 5, 29, 2, 1, 27, 222, DateTimeKind.Local).AddTicks(2910),
                            CustomerName = "سوق الجملة المركزي",
                            IsActive = true,
                            PhoneNumber = "07901234567",
                            TotalDebt = 0m,
                            UpdatedDate = new DateTime(2025, 5, 29, 2, 1, 27, 222, DateTimeKind.Local).AddTicks(2913)
                        },
                        new
                        {
                            CustomerId = 2,
                            Address = "بغداد - الجادرية",
                            CreatedDate = new DateTime(2025, 5, 29, 2, 1, 27, 222, DateTimeKind.Local).AddTicks(2935),
                            CustomerName = "مطعم الأصالة",
                            IsActive = true,
                            PhoneNumber = "07801234567",
                            TotalDebt = 0m,
                            UpdatedDate = new DateTime(2025, 5, 29, 2, 1, 27, 222, DateTimeKind.Local).AddTicks(2940)
                        },
                        new
                        {
                            CustomerId = 3,
                            Address = "بغداد - الأعظمية",
                            CreatedDate = new DateTime(2025, 5, 29, 2, 1, 27, 222, DateTimeKind.Local).AddTicks(2960),
                            CustomerName = "متجر الطازج للدواجن",
                            IsActive = true,
                            PhoneNumber = "07901234568",
                            TotalDebt = 0m,
                            UpdatedDate = new DateTime(2025, 5, 29, 2, 1, 27, 222, DateTimeKind.Local).AddTicks(2963)
                        });
                });

            modelBuilder.Entity("PoultrySlaughterPOS.Models.DailyReconciliation", b =>
                {
                    b.Property<int>("ReconciliationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReconciliationId"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("LoadWeight")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("ReconciliationDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("SoldWeight")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("PENDING");

                    b.Property<int>("TruckId")
                        .HasColumnType("int");

                    b.Property<decimal>("WastagePercentage")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal>("WastageWeight")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("ReconciliationId");

                    b.HasIndex("TruckId", "ReconciliationDate")
                        .IsUnique();

                    b.ToTable("DAILY_RECONCILIATION");
                });

            modelBuilder.Entity("PoultrySlaughterPOS.Models.Invoice", b =>
                {
                    b.Property<int>("InvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvoiceId"));

                    b.Property<int>("CagesCount")
                        .HasColumnType("int");

                    b.Property<decimal>("CagesWeight")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("CurrentBalance")
                        .HasPrecision(12, 2)
                        .HasColumnType("decimal(12,2)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<decimal>("DiscountPercentage")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal>("FinalAmount")
                        .HasPrecision(12, 2)
                        .HasColumnType("decimal(12,2)");

                    b.Property<decimal>("GrossWeight")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InvoiceNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("NetWeight")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("PreviousBalance")
                        .HasPrecision(12, 2)
                        .HasColumnType("decimal(12,2)");

                    b.Property<decimal>("TotalAmount")
                        .HasPrecision(12, 2)
                        .HasColumnType("decimal(12,2)");

                    b.Property<int>("TruckId")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasPrecision(8, 2)
                        .HasColumnType("decimal(8,2)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("InvoiceId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("InvoiceNumber")
                        .IsUnique();

                    b.HasIndex("TruckId");

                    b.ToTable("INVOICES");
                });

            modelBuilder.Entity("PoultrySlaughterPOS.Models.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentId"));

                    b.Property<decimal>("Amount")
                        .HasPrecision(12, 2)
                        .HasColumnType("decimal(12,2)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int?>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("CASH");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("PaymentId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("InvoiceId");

                    b.ToTable("PAYMENTS");
                });

            modelBuilder.Entity("PoultrySlaughterPOS.Models.Truck", b =>
                {
                    b.Property<int>("TruckId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TruckId"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DriverName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("TruckNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("TruckId");

                    b.HasIndex("TruckNumber")
                        .IsUnique();

                    b.ToTable("TRUCKS");

                    b.HasData(
                        new
                        {
                            TruckId = 1,
                            CreatedDate = new DateTime(2025, 5, 29, 2, 1, 27, 222, DateTimeKind.Local).AddTicks(2522),
                            DriverName = "أحمد محمد",
                            IsActive = true,
                            TruckNumber = "TR-001",
                            UpdatedDate = new DateTime(2025, 5, 29, 2, 1, 27, 222, DateTimeKind.Local).AddTicks(2525)
                        },
                        new
                        {
                            TruckId = 2,
                            CreatedDate = new DateTime(2025, 5, 29, 2, 1, 27, 222, DateTimeKind.Local).AddTicks(2540),
                            DriverName = "محمد علي",
                            IsActive = true,
                            TruckNumber = "TR-002",
                            UpdatedDate = new DateTime(2025, 5, 29, 2, 1, 27, 222, DateTimeKind.Local).AddTicks(2543)
                        },
                        new
                        {
                            TruckId = 3,
                            CreatedDate = new DateTime(2025, 5, 29, 2, 1, 27, 222, DateTimeKind.Local).AddTicks(2558),
                            DriverName = "علي حسن",
                            IsActive = true,
                            TruckNumber = "TR-003",
                            UpdatedDate = new DateTime(2025, 5, 29, 2, 1, 27, 222, DateTimeKind.Local).AddTicks(2564)
                        });
                });

            modelBuilder.Entity("PoultrySlaughterPOS.Models.TruckLoad", b =>
                {
                    b.Property<int>("LoadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LoadId"));

                    b.Property<int>("CagesCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LoadDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("LOADED");

                    b.Property<decimal>("TotalWeight")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("TruckId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("LoadId");

                    b.HasIndex("TruckId");

                    b.ToTable("TRUCK_LOADS");
                });

            modelBuilder.Entity("PoultrySlaughterPOS.Models.DailyReconciliation", b =>
                {
                    b.HasOne("PoultrySlaughterPOS.Models.Truck", "Truck")
                        .WithMany("DailyReconciliations")
                        .HasForeignKey("TruckId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Truck");
                });

            modelBuilder.Entity("PoultrySlaughterPOS.Models.Invoice", b =>
                {
                    b.HasOne("PoultrySlaughterPOS.Models.Customer", "Customer")
                        .WithMany("Invoices")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PoultrySlaughterPOS.Models.Truck", "Truck")
                        .WithMany("Invoices")
                        .HasForeignKey("TruckId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Truck");
                });

            modelBuilder.Entity("PoultrySlaughterPOS.Models.Payment", b =>
                {
                    b.HasOne("PoultrySlaughterPOS.Models.Customer", "Customer")
                        .WithMany("Payments")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PoultrySlaughterPOS.Models.Invoice", "Invoice")
                        .WithMany("Payments")
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Customer");

                    b.Navigation("Invoice");
                });

            modelBuilder.Entity("PoultrySlaughterPOS.Models.TruckLoad", b =>
                {
                    b.HasOne("PoultrySlaughterPOS.Models.Truck", "Truck")
                        .WithMany("TruckLoads")
                        .HasForeignKey("TruckId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Truck");
                });

            modelBuilder.Entity("PoultrySlaughterPOS.Models.Customer", b =>
                {
                    b.Navigation("Invoices");

                    b.Navigation("Payments");
                });

            modelBuilder.Entity("PoultrySlaughterPOS.Models.Invoice", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("PoultrySlaughterPOS.Models.Truck", b =>
                {
                    b.Navigation("DailyReconciliations");

                    b.Navigation("Invoices");

                    b.Navigation("TruckLoads");
                });
#pragma warning restore 612, 618
        }
    }
}
